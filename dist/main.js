!function(){var e=angular.module("app",["ui.router","firebase"]);e.config(function(e,t){var a={name:"start",url:"/",templateUrl:"./views/start.html"},s={name:"pinEntry",url:"/join",templateUrl:"./views/pinEntry.html"},i={name:"session",url:"/questions/{sessionPin}",templateUrl:"./views/session.html"},o={name:"about",url:"/about",template:"<h2>about</h2>"};e.state(a),e.state(s),e.state(o),e.state(i),t.otherwise("/")}),e.config(function(){var e={apiKey:"AIzaSyBltC1Tm4OCAFcOHREGYM_jjMjJ15Bxt6c",authDomain:"socrates-55235.firebaseapp.com",databaseURL:"https://socrates-55235.firebaseio.com",projectId:"socrates-55235",storageBucket:"socrates-55235.appspot.com",messagingSenderId:"1083849915004"};firebase.initializeApp(e),console.log("firebase initialized")})}();
var app=angular.module("app");app.controller("pinEntryCtrl",function(n,s){var i=this;i.sessionPin=null,i.onGoClick=function(){i.sessionPin&&null!=i.sessionPin&&(console.log("going to session id "+i.sessionPin),s.path("questions/"+i.sessionPin))}});
var app=angular.module("app");app.controller("sessionCtrl",["Auth","$scope","$state","$firebaseObject","$firebaseArray",function(s,e,n,o,t){var i=this;i.sessionPin=n.params.sessionPin,e.session=null,e.questions=[],e.auth=null,e.user=null,e.showLoading=!0,e.newQuestion={questionText:null,upvotes:0},i.onInit=function(){let n=firebase.database().ref().child("sessions/"+i.sessionPin),u=o(n);u.$loaded().then(function(){e.session=u;let s=firebase.database().ref().child("sessions_questions").child(u.$id);e.questions=t(s),e.questions.$loaded().then(e.showLoading=!1)}),s.$onAuthStateChanged(function(s){e.auth=s;let n=firebase.database().ref().child("users/"+e.auth.uid),t=o(n);t.$bindTo(e,"user").then(function(){console.log(e.user)})})},i.upvoteQuestion=function(s){let n=e.user.upvotedQuestionIds.indexOf(s.$id);n==-1?(s.upvotes+=1,e.questions.$save(s),e.user.upvotedQuestionIds.push(s.$id)):(s.upvotes-=1,e.questions.$save(s),e.user.upvotedQuestionIds.splice(n,1))},i.addQuestion=function(){null!=e.newQuestion.questionText?(e.questions.$add(e.newQuestion),e.newQuestion.questionText=null):toastr.error("Please enter a question!")},i.onInit()}]);
var app=angular.module("app").controller("shellCtrl",function(o,i,a){var n=this;i.$on("openSidebar",function(){n.showSidebar||(n.showSidebar=!0)}),i.$on("closeSidebar",function(){n.showSidebar&&(n.showSidebar=!1)}),i.$on("toggleSidebar",function(){n.showSidebar=!n.showSidebar}),n.signOut=function(){o.$signOut(),a.go("start"),n.showSidebar=!1},n.showSidebar=!1});
var app=angular.module("app").controller("startCtrl",["SidebarService","Auth","$rootScope","$state","$firebaseArray",function(e,r,t,n,s){var o=this;o.usersRef=firebase.database().ref().child("users"),o.users=s(o.usersRef),console.log(o.users),o.auth=r.$getAuth(),o.auth&&(o.firebaseUser=o.auth.currentUser,n.go("pinEntry")),o.error=null,o.onInit=function(){o.firebaseUser=null},o.onStartClick=function(){r.$signInAnonymously().then(function(r){o.firebaseUser=r,n.go("pinEntry"),o.usersRef.child(r.uid).set({anonymous:!0,email:"",upvotedQuestionIds:[1,2,3]}),e.openSidebar(),toastr.info("Signed into firebase with uid: "+r.uid)}).catch(function(e){toastr.error("ERROR! : "+e)})},o.signOut=function(){r.$signOut(),console.log("logged out")}}]);
angular.module("app").factory("Auth",["$firebaseAuth",function(a){var r=a();return r}]);
var app=angular.module("app");app.factory("SidebarService",function(a){return{toggleSidebar:function(){a.$broadcast("toggleSidebar")},closeSidebar:function(){a.$broadcast("closeSidebar")},openSidebar:function(){a.$broadcast("openSidebar")}}});